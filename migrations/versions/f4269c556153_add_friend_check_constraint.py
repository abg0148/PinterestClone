"""Add friend check constraint

Revision ID: f4269c556153
Revises: 
Create Date: 2025-05-12 23:44:07.796363

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f4269c556153'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('follow')
    with op.batch_alter_table('board', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_constraint('board_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])

    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_constraint('comment_pin_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'pin', ['pin_id'], ['id'])

    with op.batch_alter_table('follow_stream', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_constraint('follow_stream_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])

    with op.batch_alter_table('follow_stream_board', schema=None) as batch_op:
        batch_op.alter_column('added_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_constraint('follow_stream_board_stream_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('follow_stream_board_board_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'board', ['board_id'], ['id'])
        batch_op.create_foreign_key(None, 'follow_stream', ['stream_id'], ['id'])

    with op.batch_alter_table('friend', schema=None) as batch_op:
        batch_op.alter_column('since',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_constraint('friend_user_id_2_fkey', type_='foreignkey')
        batch_op.drop_constraint('friend_user_id_1_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['user_id_1'], ['id'])
        batch_op.create_foreign_key(None, 'user', ['user_id_2'], ['id'])

    with op.batch_alter_table('friend_request', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('like', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_constraint('like_post_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('like_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])
        batch_op.create_foreign_key(None, 'post', ['post_id'], ['id'])

    with op.batch_alter_table('pin', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_constraint('pin_post_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('pin_root_pin_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('pin_board_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'post', ['post_id'], ['id'])
        batch_op.create_foreign_key(None, 'pin', ['root_pin_id'], ['id'])
        batch_op.create_foreign_key(None, 'board', ['board_id'], ['id'])

    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_constraint('post_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('post_user_id_fkey', 'user', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('pin', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('pin_board_id_fkey', 'board', ['board_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('pin_root_pin_id_fkey', 'pin', ['root_pin_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key('pin_post_id_fkey', 'post', ['post_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('like', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('like_user_id_fkey', 'user', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('like_post_id_fkey', 'post', ['post_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('friend_request', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('friend', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('friend_user_id_1_fkey', 'user', ['user_id_1'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('friend_user_id_2_fkey', 'user', ['user_id_2'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('since',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('follow_stream_board', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('follow_stream_board_board_id_fkey', 'board', ['board_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('follow_stream_board_stream_id_fkey', 'follow_stream', ['stream_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('added_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('follow_stream', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('follow_stream_user_id_fkey', 'user', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('comment_pin_id_fkey', 'pin', ['pin_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('board', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('board_user_id_fkey', 'user', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    op.create_table('follow',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('board_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('terminated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['board_id'], ['board.id'], name='follow_board_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='follow_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'board_id', name='follow_pkey')
    )
    # ### end Alembic commands ###
